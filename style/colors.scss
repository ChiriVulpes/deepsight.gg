$tiers: common, uncommon, rare, legendary, exotic;

$colors: (
	background: var(--background-3),
	background-0: #0f0d0d #b2b6bd,
	background-1: #181515 #b2b6bd,
	background-2: #201c1c #b9bec7,
	background-3: #2e2929 #c1c5ce,
	background-4: #3f3a3a #d0d3da,
	background-5: #494444 #dddfe2,
	background-6: #555050 #eaecf0,
	background-7: #747171 #f0f0f0,
	background-8: #858080 #fff,
	background-9: #918b8b #fff,
	
	foreground: var(--foreground-1),
	foreground-0: #fff #000,
	foreground-1: #f7f3f3 #223,
	foreground-2: #bdb7b7 #676783,
	foreground-3: #7c7474 #a3a3dd,
	
	accent-0: #58CCFF #3792b9,
	accent-0-active: #8adcff,
	
	tier-common-background: #C2BCB4,
	tier-common: #ddd,
	tier-common-active: #eee,
	tier-uncommon-background: #366F42,
	tier-uncommon: #5fa16d,
	tier-uncommon-active: #9ccaa6,
	tier-rare-background: #5076A3,
	tier-rare: #7eaadf,
	tier-rare-active: #c0dafa,
	tier-legendary-background: #522F65,
	tier-legendary: #774493,
	tier-legendary-active: #b791cc,
	tier-exotic-background: #C4A73D,
	tier-exotic: #f5dc56,
	tier-exotic-active: #fff4b5,
	
	background-drawer: var(--background-2) var(--background-4),
	button-background: color(--background-5),
	button-background-hover: color(--background-8),
	button-background-hover-overlay: rgba(var(--foreground-2-rgb), .3),
	button-background-active: color(--background-4),
	button-border: color(--foreground-2),
	button-border-hover: color(--foreground-0),
	button-foreground: color(--foreground-1),
	button-foreground-hover: color(--foreground-0),
	button-icon-foreground: color(--foreground-2),
	button-icon-foreground-hover: color(--foreground-1),
	button-icon-foreground-active: color(--foreground-3),
	
	tooltip-header-background: rgba(var(--background-4-rgb), .85),
	tooltip-background-alt: rgba(var(--background-3-rgb), .85),
	tooltip-background: rgba(var(--background-0-rgb), .85),
	tooltip-footer-background: #000,
);

:root {
	color-scheme: dark;
	
	@each $var, $val in $colors {
		$color: nth($val, 1);
		@if type-of($color) == color {
			--#{$var}: #{$color};
			--#{$var}-rgb: #{red($color), green($color), blue($color)};
		} @else if str-starts-with($color, "color(") {
			$referenced-var: str-slice($color, 9, str-length($color) - 1);
			--#{$var}: var(--#{$referenced-var});
			--#{$var}-rgb: var(--#{$referenced-var}-rgb);
		} @else {
			--#{$var}: #{$color};
		}
	}
	
	// @media (prefers-color-scheme: light) {
	// 	color-scheme: light;
	// 	@each $var, $val in $colors {
	// 		@if length($val) > 1 {
	// 			$color: nth($val, 2);
	// 			@if type-of($color) == color {
	// 				--#{$var}: #{$color};
	// 				--#{$var}-rgb: #{red($color), green($color), blue($color)};
	// 			} @else if str-starts-with($color, "color(") {
	// 				$referenced-var: str-slice($color, 9, str-length($color) - 1);
	// 				--#{$var}: var(--#{$referenced-var});
	// 				--#{$var}-rgb: var(--#{$referenced-var}-rgb);
	// 			} @else {
	// 				--#{$var}: #{$color};
	// 			}
	// 		}
	// 	}
	// }
}

@function color($name, $opacity: null) {
	@if map-has-key($colors, $name) {
		@if $opacity == null {
			@return var(--#{$name});
		}
		@else {
			@return rgba(var(--#{$name}-rgb), $opacity);
		}
	}
	
	@error "Unknown color '#{$name}'";
}
