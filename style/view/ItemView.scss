@use "sass:math";

.view-item {
	$size: 78px;
	--slot-size: calc(#{$size} + #{$size * math.div(6, 75)});
	--view-padding-x: 100px;
	
	@include vertical-or-tablet-or-mobile {
		--view-padding-x: 20px;
	}
	
	&-foundry {
		align-self: start;
		margin-top: calc(var(--nav-height) / var(--background-surface-scale));
		
		@include vertical-or-tablet-or-mobile {
			transform: none !important;
		}
	}

	&-header {
		grid-column: 1/3;
		display: grid;
		grid-template-columns: auto 1fr;
		grid-template-rows: auto auto;

		&-item {
			grid-row: 1/3;
			grid-column: 1;

			height: $size;
			width: $size;
			margin-top: 6px;
			margin-right: 20px;
			transform: none;
			cursor: default;
			
			.item-locked {
				display: none;
			}

			@include mobile {
				width: 56px;
				height: 56px;
				margin-top: 4px;
				margin-right: 8px;
			}
		}
	}
	
	.background-image-1 {
		min-width: calc((569 / 1920) * (100% + 100% * var(--scroll-amount)));
		min-height: auto;
		justify-self: left;
		opacity: .6;
		transform: scale(0.75);
		transform-origin: top left;
	}

	&-title {
		z-index: 1;
		display: flex;
		gap: 0.3em;
		align-items: center;
		@include mobile {
			font-size: 28pt;
		}
	}

	&-subtitle {
		grid-row: 2;
		@include mobile {
			font-size: 17pt;
			margin-top: -0.3em;
		}
	}

	&-flavour-text {
		font-style: italic;
		grid-column: 1/3;
		max-width: 650px;
		margin: 0.5em 0;
		z-index: 1;

		@include mobile {
			margin: 0.5em 0;
		}
	}

	@at-root sleep,
		.view-item .card:times(30) {
		@include view-swipe-animation($has-view-selector: true);
	}

	@at-root sleep,
		.view-item-stats-container,
		.button-primary {
		@include view-swipe-animation;
	}

	&-content {
		display: grid;
		grid-template-columns: 2fr 1.2fr;
		grid-template-rows: auto 1fr auto;
		column-gap: 40px;
		align-self: flex-start;
		padding-bottom: 32px;
		align-content: flex-start;
		z-index: 1;
	}

	@include vertical-or-tablet-or-mobile {
		overflow-y: auto;
		@include scrollbar;
		&-content {
			overflow-y: initial;
			grid-template-columns: 1fr;
			gap: 0px;
		}
	}
	
	.item-stat-wrapper {
		padding-left: 1em;
		padding-right: 0;
	}

	&-socket {
		&s {
			@include transition(out, backdrop-filter);
			
			.card-title {
				@include transition(out, color);
			}
			
			&:hover, &:focus-within {
				backdrop-filter: blur(10px);
				@include transition(in);
				
				.card-title {
					color: color(foreground-0);
					@include transition(in);
				}
			}
			
			&-container {
				width: 100%;
			}

			&:last-child {
				.card-content {
					padding-bottom: 2px;
				}

				.view-item-socket:last-child {
					margin-bottom: 0;
				}
			}
			
			.card-section-content {
				background: linear-gradient(to bottom, #fff2, transparent 1px),
					linear-gradient(to right, #fff2, transparent 1px);
				background-size: 1.6em 1.6em, 1.6em 1.6em;
			}
		}

		display: flex;
		gap: 5px;
		margin-bottom: 10px;
		position: relative;

		&:not(:last-child)::after {
			content: "";
			display: block;
			position: absolute;
			bottom: -5px;
			width: 100%;
			height: 2px;
			background: currentColor;
			opacity: 0.1;
		}

		@include mobile {
			flex-direction: column;
			margin-bottom: 30px;
		}

		&-plug {
			@include mobile {
				flex-basis: initial;
				max-width: none;
			}

			text-align: left;
			background: none !important;
			border: none;
			margin: 0;
			@include transition(out, opacity);
			--plug-border-color-rgb: #{color-rgb(foreground-0)};
			--plug-background: transparent;
			&-type {
				&-perk {
					--plug-background: #{color(perk, 0.85)};
				}
			}
				
			--border-alpha: .3;
			&:hover, &:focus-visible {
				--border-alpha: .8;
			}

			display: grid;
			position: relative;
			grid-template-columns: auto 1fr;
			grid-template-rows: auto auto;
			--plug-icon-size: calc(3.8em + 5px);
			--plug-icon-padding: 0px;
			&-icon-inner {
				grid-column: 1;
				grid-row: 1/3;
				width: var(--plug-icon-size);
				height: var(--plug-icon-size);
				padding: var(--plug-icon-padding);
				align-self: center;
				margin-right: 0.7em;
				border: 1px solid rgb(var(--plug-border-color-rgb), var(--border-alpha));
				background: var(--plug-background);
				@include transition(out, background);

				&::after {
					content: "";
					display: block;
					position: absolute;
					inset: -6px;
					box-shadow: 0 0 0 2px transparent;
					pointer-events: none;
					@include transition(out, inset, box-shadow);
				}

				&::before {
					inset: 0;
					mask-image: none;
					-webkit-mask-image: none;
					background-image: var(--icon);
					background-size: var(--plug-icon-size) var(--plug-icon-size);
					background-repeat: no-repeat;
					background-position: center;
					background-color: initial;
					filter: var(--plug-icon-filter, none);
					@include transition(out, filter);
				}
			}

			&:where(:hover, :active, :focus-visible, .button-selected) &-icon-inner {
				@include transition(in);

				&::after {
					inset: -3px;
					box-shadow: 0 0 0 2px color(button-border-hover);
					@include transition(in);
				}
				
				&::before {
					@include transition(in);
				}
			}

			&::before {
				display: none !important;
			}

			&-name,
			&-description {
				pointer-events: none;
			}

			&-name {
				font-size: 15pt;
				text-transform: uppercase;
				padding-right: 12px;
				// grid-row: 1/3;
				margin-top: 4px;
				align-self: flex-end;
				font-weight: 600;
				@include grotesk(title) {
					
				}
			}

			&-description {
				// display: none;
				white-space: pre-wrap;
				font-size: 12pt;
				font-weight: 500;
				color: color(foreground-2);
				text-shadow: .1em .1em 0 color(background-0, .3);
				height: fit-content;
				margin-bottom: 3px;
				padding-right: 6px;
				text-overflow: ellipsis;
				display: -webkit-box;
				-webkit-box-orient: vertical;
				-webkit-line-clamp: 2;
				overflow: hidden;
				align-self: flex-start;
			}

			&-effects {
				position: absolute;
				inset: 0;
				pointer-events: none;
				z-index: -1;
			}

			&-enhanced {

				.button-icon-inner {
					&::before {
						z-index: 1;
					}

					&1 {
						position: absolute;
						z-index: 1;
						inset: 0;
						&::before {
							content: "";
							display: block;
							position: absolute;
							top: 0px;
							left: -7px;
							border: 9px solid transparent;
							border-bottom-color: #ffe262;
							border-bottom-width: 13px;
							transform: scaleX(0.8);
						}

						&::after {
							content: "";
							display: block;
							position: absolute;
							left: -1px;
							top: 15px;
							border: 3px solid transparent;
							border-bottom-width: 0;
							border-top-color: #ffe262;
							border-top-width: 70px;
							-webkit-mask-image: linear-gradient(to bottom, black 30%, transparent 50%);
							mask-image: linear-gradient(to bottom, black 30%, transparent 50%);
							transform: scaleX(0.86);
						}
					}

					&2 {
						position: absolute;
						inset: 0;
						background: radial-gradient(circle at bottom, #ffe262dd, transparent 70%);
						overflow: hidden;
						border-radius: 100%;
					}
				}
			}

			&-required-level {
				grid-column: 1;
				grid-row: 1/3;
				position: absolute;
				padding: 5px;
				z-index: 1;
				@include transition(out, opacity);

				&::before {
					content: "";
					background: color(background-2, 0.9);
					border: 1px solid color(background-4);
					transform: rotate(45deg);
					bottom: 2px;
					right: 4px;
					position: absolute;
					width: 23px;
					height: 23px;
					z-index: -1;
				}

				text-align: center;
				font-family: $font-title;
				font-weight: 700;
				font-size: 20px;
				width: 23px;
				height: 23px;
				right: 6px;
				bottom: -1px;
			}
			
			.view-item &:not(#{&}-socketed) {
				--plug-background: transparent;
			}
			
			.view-item &:not(#{&}-socketed) &-name, .view-item &:not(#{&}-socketed) &-description {
				display: none;
			}

			&-socketed {
				flex-grow: 1;
				max-width: none;
				--plug-background: #{color(perk, 0.85)};
			}

			&-type {
				&-intrinsic {
					--plug-background: transparent;
					.button-icon-inner {
						&1 {
							position: relative;
							margin-left: -14px;
							margin-top: -10px;

							&::after {
								border-top-color: #ffed9f;
								border-top-width: 50px;
								-webkit-mask-image: linear-gradient(to bottom, black 20%, transparent 90%);
								mask-image: linear-gradient(to bottom, black 20%, transparent 90%);
							}
						}

						&2 {
							display: none;
						}
					}
				}
			}
			
			&-icon-inner {
				&-type {
					&-perk, &-intrinsic, &-artifact {
						--plug-icon-size: 3.8em;
						--plug-icon-padding: 5px;
					}
					
					&-perk {
						border-radius: 100%;
						&::after {
							border-radius: 100%;
						}
						
						&-emptycraftingsocket {
							padding: 0;
							border-radius: 0;
							--plug-background: transparent;
							&::after {
								border-radius: 0;
							}
						}
					}
					
					&-artifact {
						background: linear-gradient(to bottom, #1b7679, #105d61);
						border-radius: var(--plug-icon-padding);
						border: none;
						box-shadow: inset 0 1px #69f4fb, inset 0 0 0 var(--plug-icon-padding) #ffffff24;
					}
					
					&-statuseffect {
						--plug-icon-size: 40px;
						border-color: transparent;
					}
					
					&-subclass-super {
						--plug-icon-size: 3.4em;
						margin-left: .8em;
						margin-right: 1.2em;
						transform: rotate(45deg) translate(.2em, .2em);
						
						&::before {
							position: absolute;
							inset: initial;
							left: 50%;
							top: 50%;
							width: 4.8em;
							height: 4.8em;
							background-size: 4.8em 4.8em;
							transform: translate(-50%, -50%) rotate(-45deg);
						}
					}
					
					&-intrinsic {
						border: none;
						// padding: 5px;
						// border-radius: 5px;
						// width: calc(4.6em - 14px);
						// height: calc(4.6em - 14px);
						
						&-frame {
							--plug-icon-padding: 0;
							margin: 4px 16px 4px 6px;
						}

						&::before {
							inset: -12px;
							background-size: 4.6em 4.6em;
						}

						&::after {
							border-radius: 7px;
						}
						
						&-exotic, &-origin {
							&::after {
								border-radius: 100%;
							}
						}
					}
				}
			}
		}
	}

	&-definition &-perks {
		.view-item-socket {
			&s-container {
				display: flex;
				flex-direction: row;
				gap: 40px;
			}

			position: relative;
			display: grid;
			grid-template-rows: repeat(min(5, var(--max-socket-plugs)), 1fr);
			grid-auto-columns: auto;
			grid-auto-flow: column;
			max-height: calc((3.8em + 12px * 2) * 5);
			width: fit-content;
			gap: 0;
			margin-bottom: 0;

			&::before {
				content: "";
				display: block;
				position: absolute;
				top: 0;
				bottom: 0;
				right: calc(100% + 19px);
				left: -21px;
				background: currentColor;
				opacity: 0.1;
			}

			&::after {
				content: none;
			}

			&-plug {
				grid-template-columns: auto;
				max-width: initial;
				flex-grow: 0;
				flex-basis: initial;
				margin: 0;
			
				--plug-background: #{color(perk, 0.85)};
				
				&.view-item-socket-plug-type-intrinsic {
					--plug-background: transparent;
				}

				&-name,
				&-description {
					display: none;
				}

				.button-icon-inner {
					margin-right: 0;
				}

				&,
				&::before {
					border-radius: 100px;
				}
			}
		}

		@at-root :is(#{&}-wishlisting, #{&}-viewing-wishlist) {
			.view-item-socket-plug {
				&:not(.view-item-socket-plug-selected) {
					--plug-background: transparent;
				}

				&-selected {
					--plug-background: #{color(perk-wishlisted, 0.85)};
					
					&.view-item-socket-plug-type-intrinsic {
						&-frame {
							--plug-icon-filter: sepia() saturate(10) hue-rotate(74deg) brightness(0.65);
							
							.button-icon-inner2 {
								display: block;
								z-index: -1;
								background: white;
								position: absolute;
								inset: 1px;
								border-radius: 5px;
							}
						}
						
						&-exotic {
							--plug-icon-filter: hue-rotate(82deg);
						}
					}
				}

				&-enhanced,
				&-required-level-wrapper {
					opacity: 0;
					pointer-events: none;
					user-select: none;
				}
			}
		}
	}

	&-button {
		&-view-in-collections {
			position: absolute;
			top: 0;
			right: var(--view-padding-x);
		}
	}

	&-perks-button-wishlist-perks {
		filter: drop-shadow(0px 2px 1px color(background-0)) drop-shadow(0px 2px 3px color(background-0, 0.5));
		&:not(:hover, :focus-visible, :active, .active) {
			color: var(--color, #{color(accent-0)});
		}

		&::after {
			content: "";
			display: block;
			width: 0.85em;
			height: 0.85em;
			background: currentColor;
			@include mask-icon(var(--image, url("./image/svg/wishlisted.svg")));
			position: relative;
			order: -1;
			padding-right: 0.5em;
		}

		&-marked-as-junk {
			--color: #{color(wishlist-color-no-match)};
			--image: url("./image/svg/delete.svg");
		}

		&-shaped {
			--image: url("./image/svg/shaped.svg");
			--color: #{color(shaped)};
		}
	}

	&-perks-wishlist {
		&-container {
			margin-left: auto;
			position: relative;
		}

		&-button-add {
			.view-item-perks:not(.view-item-perks-wishlisting)
				&:not(.view-item-perks-button-wishlist-perks-marked-as-junk)
				& {
				&-plus-icon {
					position: relative;
					width: 0.75em;
					height: 0.75em;
					margin-right: 0.3em;

					&::before,
					&::after {
						content: "";
						display: block;
						background: currentColor;
						width: 2px;
						height: 2px;
						position: absolute;
						top: 50%;
						left: 50%;
						transform: translate(-50%, -50%);
					}

					&::before {
						height: 100%;
					}

					&::after {
						width: 100%;
					}
				}
			}

			&.button-selected {
				background: color(input-background-active, 0.85);
				box-shadow: 0 0 0 7px color(input-background-active, 0.85);
			}

			.view-item-perks-wishlisting & {
				width: 200px;
			}
		}

		&-name-input {
			background: none;
			border: none;
			font: inherit;
			color: inherit;
			letter-spacing: inherit;
			outline: none;
			flex-grow: 1;
			text-transform: none;

			&:focus {
				color: color(foreground-0);
			}
		}

		&-button-confirm {
			position: absolute;
			top: 50%;
			right: 8px;
			transform: translateY(-50%);
			align-self: center;
			display: grid;
			width: 1em;
			height: 1em;
			padding: 0;
			background: none;
			border: none;
			margin: 0;
			opacity: 0;
			pointer-events: none;

			&-icon {
				grid-column: 1;
				grid-row: 1;
				display: block;
				border: 2px solid currentColor;
				border-top: none;
				border-left: none;
				width: 40%;
				height: 80%;
				margin-top: -5px;
				position: relative;
				transform: rotate(45deg);
				align-self: center;
				justify-self: center;
			}

			.view-item-perks-wishlisting & {
				opacity: 1;
				pointer-events: all;
			}
		}

		&-drawer {
			position: absolute;
			top: -7px;
			right: -16px;
			left: initial;
			padding: 10px !important;
			padding-top: 41px !important;
			max-height: 300px;
			min-width: 214px;
			display: flex;
			flex-direction: column;

			.drawer-close {
				display: none;
			}

			&.hidden {
				opacity: 0;
				max-height: 0px;
			}

			&-wishlist {
				display: grid;
				grid-template-columns: 1fr auto;
				align-content: flex-start;

				&-title,
				&-remove {
					background: none;
					border: none;
				}

				&-title {
					grid-row: 1;
					grid-column: 1/3;
				}

				&-remove {
					grid-row: 1;
					grid-column: 2;
					align-self: center;
					display: grid;
					width: 1em;
					height: 1em;
					padding: 0;

					&-icon {
						display: contents;
						&::before,
						&::after {
							content: "";
							grid-column: 1;
							grid-row: 1;
							display: block;
							width: 100%;
							height: 100%;
							margin: auto;
							transform: rotate(45deg);
							transform-origin: center;
							background: white;
						}

						&::before {
							height: 2px;
						}
						&::after {
							width: 2px;
						}
					}
				}

				&:last-of-type {
					margin-bottom: -8px;
				}
			}
		}

		&-no-rolls-please {
			margin-top: auto;
			margin-bottom: -10px;
			font-size: 11.5pt;
			font-weight: 500;
			z-index: 1;
			text-transform: none;
			font-family: $font-sans-serif;

			.checkbox-label {
				color: color(foreground-0);
			}
		}
	}

	&-perks-mods-traits {
		height: fit-content;
		min-height: 0;
		display: grid;
		
		@include vertical-or-tablet {
			grid-column: 1/3;
		}
	}

	&-stats {
		&-container {
			display: grid;
			grid-template-columns: auto 1fr;
			height: fit-content;
			margin-top: auto;
			gap: 20px;
			backdrop-filter: blur(2px);
			position: sticky;
			bottom: 0px;
		}

		background: none;
		border: none;
		
		.item-stat {
			font-weight: 500;
			text-shadow: .1em .1em 0 color(background-0, .3);
			
			&-label {
				color: color(foreground-2);
			}
			
			&-value {
				color: color(foreground-0);
			}
		}
	}

	&-primary-info {
		display: grid;
		grid-template-columns: minmax(min-content, 1fr) auto;
		grid-template-rows: auto auto auto auto 1fr;
		position: relative;
		gap: 6px;

		&::after {
			content: "";
			display: block;
			position: absolute;
			right: -20px;
			width: 2px;
			height: 100%;
			background: currentColor;
			opacity: 0.3;
		}

		&:last-child {
			grid-column: 2;
			&::after {
				content: none;
			}
		}

		&-power-label,
		&-ammo,
		&-tracker {
			grid-column: 1/3;
		}

		&-element {
			grid-column: 1;
			color: var(--colour);
			display: flex;
			margin-right: -5px;
			justify-self: flex-end;
			&::before {
				content: "";
				display: inline-block;
				width: 44px;
				height: 44px;
				margin-top: -6px;
				align-self: center;
				background: var(--icon);
				background-size: contain;
			}
		}

		&-power {
			&-label {
				text-align: right;
				opacity: 0.8;
				font-size: 16pt;
				font-weight: 200;
				font-family: $font-title;
			}
			grid-column: 2;
			font-size: 44pt;
			text-transform: uppercase;
			font-weight: 700;
			line-height: 28px;
			letter-spacing: -0.02em;
			display: inline-flex;
			justify-self: flex-end;
			font-family: $font-numeric;
			.has-font-neue-haas-grotesk & {
				letter-spacing: 0em;
				line-height: 32px;
			}
		}

		&-ammo {
			margin-top: 12px;
			justify-content: flex-end;
			&::before {
				width: fit-content;
				height: 14pt;
			}
		}

		&-tracker {
			margin-top: 24px;
		}
	}

	&-lock-button {
		width: 0.7em;
		height: 0.7em;
		border-radius: 1em;
		border: none;
		@include override-color(button-background, color(foreground-0));
		@include override-color(button-background-hover, color(foreground-0));
		@include override-color(button-background-active, color(foreground-0));
		--opacity: .2;
		display: grid;
		align-items: center;
		justify-items: center;
		padding: 0;
		
		&:hover, &:focus-visible {
			--opacity: .3;
		}
		
		&:active {
			--opacity: .15;
		}

		&::before {
			border-radius: 1em;
		}

		&::after {
			content: "";
			display: block;
			width: 0.55em;
			height: 0.55em;
			margin-top: -0.06em;
			color: color(background-0, .4);
			@include transition(out, background);
			@include mask-icon(unlock);
		}

		&-locked::after {
			@include mask-icon(lock);
		}

		&:hover::after {
			color: color(background-0, .3);
			@include transition(in);
		}

		&:active::after {
			color: color(background-0, .5);
			@include transition(in);
		}
	}

	// return to collections button
	.button-primary {
		margin-top: 50px;
	}
}
