.view-auth {
	background: color(background-2);
	perspective: 500px;
	perspective-origin: center center;

	&-content {
		grid-row: 1;
		display: grid;
		grid-template-rows: 100vh auto;
		padding: 0;
	}

	&-splash {
		display: grid;
		grid-template-columns: auto 1fr;
		overflow-y: visible;
		margin-left: -100px;
		align-self: center;

		width: fit-content;
		height: fit-content;
		justify-self: center;

		> * {
			width: fit-content;
			grid-column: 2;
		}

		@include mobile {
			grid-template-columns: 1fr;
			margin-left: 0;

			> * {
				grid-column: 1;
			}
		}
	}

	&-header {
		display: contents;
		pointer-events: none;
		user-select: none;
		-webkit-user-select: none;
	}

	&-logo {
		grid-column: 1;
		width: 128px;
		margin-top: 5px;
		margin-right: 20px;

		@media (max-width: 800px) {
			width: 108px;
		}

		@media (max-width: 580px) {
			width: 88px;
		}

		@media (max-width: 540px) {
			width: 128px;
			align-self: center;
		}
	}

	&-title {
		font-size: 48pt;
		line-height: 1em;
		margin-bottom: 50px;
		margin-left: -3px;
		font-weight: 300;
		font-family: $font-title;

		@media (max-width: 800px) {
			font-size: 40pt;
		}

		@media (max-width: 580px) {
			font-size: 32pt;
		}
	}

	&-logo,
	&-title,
	&-state,
	&-button-auth {
		@include view-swipe-animation;
	}

	&::before {
		content: "";
		display: block;
		position: absolute;
		top: 10%;
		left: -10%;
		transform: translateX(-50%) translateY(-50%) translateZ(-500px) rotateX(25deg) rotateY(-5deg) rotateZ(15deg);
		transform-origin: center center;

		$sc-vault: url(https://user-images.githubusercontent.com/6081834/209422574-9c48fc61-18ae-4fc6-83fc-0596dc85b836.png);
		$sc-collections: url(https://user-images.githubusercontent.com/6081834/209422841-14113e21-dafc-47c4-97f5-8c3b39fb9428.png);
		$sc-wishlisting: url(https://user-images.githubusercontent.com/6081834/209422859-d9012d7b-b035-4ff2-aede-0d2c85ec023e.png);

		$backgrounds: $sc-vault, $sc-collections, $sc-wishlisting, $sc-wishlisting, $sc-vault, $sc-collections,
			$sc-collections, $sc-wishlisting, $sc-vault;
		$width: 1920px;
		$height: 937px;
		$positions:
			0px 0px,
			$width * 1 0px,
			$width * 2 0px,
			0px $height * 1,
			$width * 1 $height * 1,
			$width * 2 $height * 1,
			0px $height * 2,
			$width * 1 $height * 2,
			$width * 2 $height * 2;

		$offsets:
			0px,
			100px,
			50px,
			-50px,
			0px,
			-100px,
			0px,
			-50px,
			-70px;

		@function list-remove($list, $index) {
			$newList: ();
			@for $i from 1 through length($list) {
				@if $i != $index {
					$newList: append($newList, nth($list, $i), "space");
				}
			}
			@return $newList;
		}

		@function sort-indices($list) {
			$list-with-indices: ();
			@for $i from 1 through length($list) {
				$list-with-indices: append($list-with-indices, (nth($list, $i), $i));
			}

			// @debug $list-with-indices;

			$sortedlist: ();
			@while length($list-with-indices) > 0 {
				$index: 1;
				$value: nth($list-with-indices, $index);
				$remove-index: $index;
				$index: nth($value, 2);
				// @debug default index $index of $value;
				@for $i from 1 through length($list-with-indices) {
					$test-value: nth($list-with-indices, $i);
					@if nth($test-value, 1) < nth($value, 1) {
						$index: nth($test-value, 2);
						$remove-index: $i;
						// @debug preferring index $index of $test-value;
					}
				}
				$sortedlist: append($sortedlist, $index, "space");
				$list-with-indices: list-remove($list-with-indices, $remove-index);
			}
			@return $sortedlist;
		}

		$indices: sort-indices($offsets);
		// @debug $indices;
		// @each $index in $indices {
		// 	@debug nth($offsets, $index);
		// }

		$background-value: ();
		$background-position-value: ();
		@each $i in $indices {
			$background: nth($backgrounds, $i);
			$position: nth($positions, $i);
			$offset: nth($offsets, $i);

			$background-value: append($background-value, $background, "comma");
			$background-position-value: append(
				$background-position-value,
				unquote("#{nth($position, 1) + $offset} #{nth($position, 2) + $offset}"),
				"comma"
			);
		}

		background: $background-value;
		background-position: $background-position-value;

		width: $width * 3;
		height: $height * 3;
		background-size: $width $height;
		background-repeat: no-repeat;
		filter: blur(5px);
		opacity: 0.2;
	}

	&-footer {
		text-align: center;
		margin: auto;
		height: fit-content;
		padding: 0px 20px 10px;
	}

	&-nav {
		width: fit-content;
		display: flex;
		flex-wrap: wrap;
		column-gap: 25px;
		row-gap: 5px;
		opacity: 0.8;
		justify-content: right;
	}

	&-about {
		background: color(background-2, 0.7);
		padding: 50px 0;
		min-height: 100vh;
		box-sizing: border-box;
		height: fit-content;
	}

	&-scroll-down-hint {
		position: absolute;
		bottom: 0;
		left: 50%;
		transform: translateX(-50%);
		font-family: $font-title;
		font-size: 20px;
		letter-spacing: 0.05em;
		padding: 5px 0;
		z-index: -1;
		text-align: center;
		@include transition(0.1s, opacity);

		&.hidden {
			display: block;
			opacity: 0;
		}
	}
}
