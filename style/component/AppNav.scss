.app-nav {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: var(--nav-height);
	box-sizing: border-box;
	display: flex;
	z-index: 9999999;
	user-select: none;
	-webkit-user-select: none;
	background: color(background-2, 0.3);

	&::before {
		content: "";
		display: block;
		position: absolute;
		inset: 0;
		backdrop-filter: blur(10px);
		z-index: -1;
	}

	// @media (max-width: 600px) {
	// 	width: calc(100% - 17px);
	// }

	&.hidden {
		display: none;
	}

	@at-root .has-app-nav {
		--current-nav-height: var(--nav-height);
	}

	$delay: 0.02s;

	&-identity-container {
		position: relative;
		margin-right: 15px;
		transition-delay: $delay * 2;
	}

	@at-root .app-info-container,
		.app-nav-identity-container,
		.app-nav-destination {
		@include transition(0.2s, transform);
		transition-timing-function: cubic-bezier(0, 0, 0.4, 1);
	}

	&.hidden {
		:where(.app-info-container, .app-nav-identity-container, .app-nav-destination) {
			@include transition(0.4s);
			transform: translateY(-50px);
		}
	}

	--destination-margin-x: 10px;
	@include vertical-or-tablet-or-mobile {
		--destination-margin-x: 3px;
	}

	&-destinations {
		flex-grow: 1;
		display: flex;
		// justify-content: flex-end;
		margin-right: 10px;

		@at-root .app-nav-destination {
			background: none !important;
			border: none;
			box-shadow: none;
			color: color(foreground-3);
			font-size: inherit;
			letter-spacing: 0.04em;
			font-weight: 600;
			margin-right: var(--destination-margin-x);
			margin-left: var(--destination-margin-x);
			text-transform: uppercase;
			box-sizing: border-box;
			justify-content: center;
			padding-bottom: 4px;
			min-width: 77px;
			width: fit-content;
			margin-bottom: 10px;
			// background-color: blueviolet;

			&:focus-visible {
				outline: auto;
			}

			@for $i from 1 through 20 {
				&:nth-child(#{$i}) {
					transition-delay: $delay * 2 + $delay * $i;
				}
			}

			&::before {
				box-shadow: none !important;
				top: auto !important;
				bottom: -4px !important;
				left: 50% !important;
				transform: translateX(-50%);
				width: 0%;
				height: 4px;
				background: currentColor;
				@include transition(out, width);
			}

			&:where(:hover, :active, .active, :focus-visible) {
				color: color(foreground-0);
			}

			&.active {
				&::before {
					width: 100%;
					@include transition(in);
				}
			}

			&-collections {
				margin-left: auto;
			}

			&-settings {
				margin-right: 0;
				min-width: initial;
				&::after {
					content: "";
					display: block;
					height: 1.3em;
					width: 1.3em;
					background: currentColor;
					-webkit-mask-image: url("./image/svg/gear.svg");
					-webkit-mask-size: contain;
					-webkit-mask-repeat: no-repeat;
					-webkit-mask-position: center;
					mask-image: url("./image/svg/gear.svg");
					mask-size: contain;
					mask-repeat: no-repeat;
					mask-position: center;
				}
			}
		}

		&-toggle,
		&-close {
			display: none;
		}

		// @media (max-width: 600px) {
		// 	right: 17px;
		// }
	}

	&-destination {
		width: fit-content;
		white-space: nowrap;
		&-children {
			display: flex;
			flex-direction: column;
			height: fit-content;
			@include transition(out, max-height, background);
			overflow: hidden;
			padding-top: 2px;
			padding-bottom: 2px;
			position: relative;

			&::before {
				content: "";
				display: block;
				position: absolute;
				inset: 0;
				backdrop-filter: blur(10px);
			}

			.app-nav-destination {
				@include transition(out, max-height, margin, opacity, padding);
				align-self: center;
				max-height: 50px;
			}

			&:hover,
			&:focus-within {
				@include transition(in);
				transition-delay: 0s;
				background: color(background-1, 0.9);
			}

			@mixin hidden($selector) {
				&:not(:hover):not(#{unquote($selector)}) .app-nav-destination:not(.active, :first-child),
				&:not(:hover):not(#{unquote($selector)}).app-nav-destination-child-active
					.app-nav-destination:first-child:not(.active) {
					max-height: 0px;
					margin-top: 0px;
					margin-bottom: 0px;
					padding-top: 0px;
					padding-bottom: 0px;
					opacity: 0;
				}
			}

			@mixin can-hide {
				@include hidden(":focus-within");
				@supports selector(:has(:focus-visible)) {
					@include hidden(":has(:focus-visible)");
				}
			}

			@include desktop {
				@include can-hide;
			}

			@include vertical {
				.app-nav:not(.app-nav-compress) & {
					@include can-hide;
				}
			}
		}

		@mixin dropdown-mode {
			&-children {
				flex-basis: 100%;
				display: flex;
				flex-direction: row;
				flex-wrap: wrap;
				gap: 1em;
				row-gap: 0;
				background: none !important;
				margin-bottom: 10px;
				padding-left: 20px;
				&::before {
					backdrop-filter: none;
					top: 45px;
					left: 10px;
					width: 4px;
					height: calc(100% - 45px);
					background: #fff3;
				}

				> :first-child {
					flex-basis: 100%;
					justify-content: left;
					margin-left: -20px;
				}

				.app-nav-destination {
					margin-bottom: 0;
				}
			}

			margin-left: 0;
			margin-right: 0;
			align-self: flex-end;

			&s {
				position: fixed;
				top: 0;
				right: 0;
				margin-right: 0;
				padding: 10px;
				display: flex;
				flex-wrap: wrap;
				z-index: 2;
				justify-content: flex-start;
				gap: 1em;

				&.active {
					background: color(background-4, 0.9);
					backdrop-filter: blur(5px);
				}

				&-toggle {
					display: block;
					--button-background: transparent;
					--button-border: transparent;
					width: fit-content;
					margin-left: auto;
					height: 34px;
					margin-top: 0;

					&::after {
						content: "";
						display: block;
						height: 0.4em;
						width: 1.5em;
						box-shadow:
							0 0.1em 0 currentColor,
							0 -0.1em 0 currentColor;
					}
				}

				&:not(.active) .app-nav-destination {
					display: none;
				}

				&.active + &-close {
					display: block;
					position: fixed;
					top: 0;
					left: 0;
					width: 100vw;
					height: 100vh;
					z-index: 1;
				}
			}

			&-settings {
				position: absolute;
				top: 4px;
				left: 10px;
			}
		}

		@include tablet-or-mobile {
			@include dropdown-mode;
		}

		@include vertical {
			.app-nav-compress & {
				@include dropdown-mode;
			}
		}
	}
}
