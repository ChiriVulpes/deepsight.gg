.player-overview {
	&,
	&-container {
		display: flex;
		align-content: center;
	}

	&-identity {
		font-weight: 600;
		user-select: all;
		-webkit-user-select: all;
		height: fit-content;
		align-self: center;
		min-width: 130px;
		text-align: center;

		&-username,
		&-code {
			display: inline;
		}

		&-code {
			color: color(accent-0);
		}
	}

	&-drawer {
		position: fixed;
		bottom: initial;
		top: 0;
		left: 0;
		padding-left: 10px !important;
		padding-right: 10px !important;
		padding-bottom: 10px;
		padding-top: calc(var(--nav-height) + 10px);
		z-index: -1;
		grid-template-columns: 1fr auto auto 1fr;
		gap: 50px;
		width: 100%;

		.drawer-close {
			top: initial;
			right: initial;
			top: calc(8px + var(--nav-height));
			left: calc(145px + 120px / 2);
			&::after {
				transform: rotate(225deg);
				top: 6px;
			}

			transition: opacity 0.3s ease-out;

			@include tablet-or-mobile {
				left: 50%;
				transform: translateX(-50%);
			}
		}

		&-panel {
			display: grid !important;
			grid-template-rows: 0px;
			// grid-template-rows: 20px;
			grid-template-columns: max-content;
			overflow: initial;
			column-gap: 0;
			row-gap: 4px;
			padding: 0;
			height: fit-content;
			justify-items: center;

			grid-row: 1;
			grid-column: 2/4;
		}

		@include mobile {
			grid-template-columns: auto;
			grid-template-rows: auto auto;

			&-panel {
				grid-row: 2;
				grid-column: 1;
			}
		}

		@include tablet-or-mobile {
			position: fixed;
			bottom: 0;
			left: 0;
			height: calc(100% - var(--nav-height));
			padding-bottom: 0;
			max-height: none !important;
			width: calc(100% - 20px);

			top: auto !important;

			&.hidden {
				bottom: 100%;
			}

			&-panel {
				grid-template-columns: initial;
				grid-template-rows: initial;
				grid-auto-flow: row;
				overflow-y: auto;
				height: auto;
				padding-bottom: 10px;
			}
		}
	}

	&-class-selection {
		grid-row: 1;
		grid-column: 2;
	}

	&-character-picker {
		z-index: 2;
	}

	&-character-settings {
		grid-column: 1;
		grid-row: 1/6;
		display: grid;
		grid-template-rows: repeat(3, 130px);

		&::before {
			content: "";
		}
	}

	&-subclass-picker {
		.class-picker-button {
			background: none;

			&-preview {
				overflow: hidden;
				&::before {
					content: "";
					display: block;
					position: absolute;
					inset: calc((-100% * var(--wipe-animation-size-multiplier) + 100%) / 2);
					transform: rotate(-45deg);
					background: var(--background);
					background-size: calc(100% + 6px);
					background-repeat: no-repeat;
					background-position: center;
					@include transition(out, opacity);
				}
			}
		}

		&:not(:hover, :focus-within) .class-picker-button-wrapper .class-picker-button-preview::before {
			opacity: 0;
		}
	}

	&-slot {
		display: contents;
		@include tablet-or-mobile {
			display: grid;
			grid-template-columns: 1fr 1fr;
			grid-template-rows: auto auto;
			grid-auto-flow: column;
			justify-items: center;
			width: 100%;
			margin-bottom: 3px;
		}

		@include desktop-or-vertical {
			&::before {
				content: "";
				margin-right: var(--destination-margin-x);
				margin-left: var(--destination-margin-x);
				min-width: 77px;
			}
		}

		&-overview {
			margin-bottom: 20px;
			padding-top: 30px;
		}

		:where(.item-power-level) {
			justify-self: initial;

			@include tablet-or-mobile {
				font-size: 1.3em;
			}
		}
	}

	&-item {
		--size: 60px;
		width: var(--size);
		height: var(--size);

		@include desktop-or-vertical {
			@at-root &,
				.player-overview-power-total-label {
				&-equipped {
					grid-row: 2;
				}

				&-highest-power {
					grid-row: 4;
				}
			}
		}

		@include tablet-or-mobile {
			--size: 80px;
		}

		&-same {
			position: relative;
			opacity: 0.2;

			&::before,
			&::after {
				content: "";
				display: block;
				position: absolute;
			}

			&::before {
				width: calc(var(--size) * 0.2);
				height: calc(var(--size) * 0.3);
				background: currentColor;
				left: calc(var(--size) * 0.4);
				top: calc(var(--size) * 0.5);
			}

			&::after {
				border: calc(var(--size) * 0.25) solid transparent;
				border-bottom-color: currentColor;
				left: calc(var(--size) * 0.5);
				transform: translateX(-50%);
			}

			@include tablet-or-mobile {
				transform: translateX(-5px) rotate(-90deg);
			}
		}
	}

	&-power {
		background: none;
		grid-row: auto !important;
		@include desktop-or-vertical {
			&-equipped {
				grid-row: 3 !important;
			}

			&-highest-power {
				grid-row: 5 !important;
			}
		}

		&-total {
			justify-self: flex-end;

			&-label {
				align-self: flex-end;
				font-family: $font-title;
				letter-spacing: 0.05em;
				font-weight: 500;
				text-transform: uppercase;
				border-bottom: 2px solid;
				width: 100%;
				opacity: 0.6;
			}

			@include tablet-or-mobile {
				justify-self: center;

				&-label {
					width: fit-content;
				}
			}
		}
	}

	&-character-button {
		&s {
			display: flex;
			flex-direction: column;
			padding-right: 20px;
			gap: 10px;
			@include transition(out, opacity);

			@include mobile {
				flex-direction: row;
				justify-content: center;
				padding-top: 40px;
				padding-right: initial;
			}
		}

		background: var(--background);
		margin: 0;
		text-transform: uppercase;
		border: none;
		display: grid;
		grid-template-rows: auto auto;
		justify-items: flex-start;

		&-class-name {
			font-family: $font-title;
		}

		&-power {
			justify-self: flex-start;
			opacity: 0.6;
			font-size: 0.95em;
			font-weight: 500;
			background: none;
		}

		&::after {
			content: "";
			display: block;
			position: absolute;
			inset: 0;
			background: transparent;
			box-shadow: inset 0 0 0 1px color(foreground-0, 0.1);
			@include transition(out, background, opacity);
		}

		&:where(:hover, :focus-within, .button-selected)::after {
			background: color(foreground-0, 0.1);
			box-shadow: inset 0 0 0 1px color(foreground-0, 0.2);
			@include transition(in);
		}

		&:active::after {
			background: color(background-1);
			opacity: 0.4;
			@include transition(0s);
		}
	}
}
