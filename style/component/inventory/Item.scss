$z-index-watermark: 100;
$z-index-item-border: 300;
$z-index-masterwork: 500;
$z-index-wishlist: 600;
$z-index-extra: 800;
$z-index-shaped: 900;
$z-index-deepsight: 900;
$z-index-loading: 1000;

.item {
	width: 100%;
	height: 100%;
	position: relative;
	border: none;
	margin: 0;
	padding: 0;
	transition-property: background, border, color, transform, filter, opacity;
	background: var(--background-color) !important;

	&::after {
		content: "";
		display: block;
		position: absolute;
		inset: 0;
		z-index: $z-index-item-border;
		box-shadow: inset 0 0 0 1px var(--border-color);
		@include transition(out, background, box-shadow);
	}

	&:where(.button):where(:hover, :active, :focus-visible) {
		&::after {
			background: color(button-background-hover-overlay);
			@include transition(in);
		}
	}

	&-icon {
		width: 100%;
		height: 100%;
	}

	&-borderless {
		&::after {
			content: none;
		}

		background-color: transparent !important;
	}

	&-is-masterwork {
		--ornament-width: 3px;
	}

	&-universal-armour-ornament {
		@include transition(in, box-shadow);
		box-shadow:
			inset 0 0 0 calc(3px + var(--ornament-width, 0px)) #0004,
			inset 0 0 0 calc(4px + var(--ornament-width, 0px)) var(--border-color),
			inset 0 0 0 calc(5px + var(--ornament-width, 0px)) #0008;
		background-size: calc(100% - var(--ornament-width, 0px) * 2 - 8px);
	}

	@each $tier in $tiers {
		&-tier-#{$tier} {
			--border-color: #{color(tier-#{$tier})};
			--background-color: #{color(tier-#{$tier}-background)};
			&:where(:hover, :active, :focus-visible) {
				--border-color: #{color(tier-#{$tier}-active)};
			}
		}
	}

	&--classified {
		--background-color: #{color(background-6, .8)};
		--border-color: #{color(background-9)};
	}
	
	&-classified {
		display: block;
		position: absolute;
		inset: 0;
		color: var(--border-color);
		overflow: hidden;
		
		&::before {
			content: "";
			display: block;
			position: absolute;
			inset: calc(50% - 50% / #{$radius-multiplier});
			transform: rotate(45deg);
			border: 1px solid;
			box-shadow: 0 0 10px currentColor, inset 0 0 5px color(background-4);
		}
		
		&::after {
			content: "";
			display: block;
			position: absolute;
			left: 25%;
			right: 25%;
			top: 22%;
			bottom: 28%;
			@include mask-icon(lock);
			opacity: .7;
		}
	}

	&-masterwork,
	&-shaped,
	&-adept,
	&-deepsight,
	&-wishlist,
	&-wishlist-no-match,
	&-fomo,
	&-moment-watermark,
	&-extra {
		position: absolute;
		inset: 0;
		background-size: cover;
	}

	&-moment-watermark {
		inset: 1px;
		background-image: var(--watermark);
		z-index: $z-index-watermark;
	}

	&-masterwork {
		--bright-border-color-rgb: #{color-rgb(masterwork)};
		--dark-border-color-rgb: #{color-rgb(masterwork-dark)};
		
		--main-border-color-rgb: var(--dark-border-color-rgb);
		box-shadow:
			inset 0 0 0 2px rgb(var(--main-border-color-rgb)),
			inset 0 0 0 4px rgb(var(--dark-border-color-rgb), 0.4),
			inset 0 0 2px 5px rgb(var(--dark-border-color-rgb), 0.467);
		overflow: hidden;
		background: radial-gradient(ellipse at bottom center, color-mix(in lch, rgb(255 255 255 / .4), 80% rgb(var(--bright-border-color-rgb), .4)) 10%, transparent 30%);
		background-size: 300% 100%;
		background-position: center;
		z-index: $z-index-masterwork;

		.item-deepsight:not(.hidden) ~ &,
		&-shifted-due-to-junk-border {
			inset: 2px;
		}

		&-spinny {
			position: absolute;
			inset: 0;
			pointer-events: none;

			--i0: calc(0% + 2px);
			--i1: calc(100% - 2px);
			clip-path: polygon(0% 0%, 0% 100%, 100% 100%, 100% 0%, var(--i0) 0%, var(--i0) var(--i0), var(--i1) var(--i0), var(--i1) var(--i1), var(--i0) var(--i1), var(--i0) 0%);

			&::after {
				content: "";
				display: block;
				position: absolute;
				inset: -100%;
				background: linear-gradient(to bottom, transparent 30%, #fff 50%, transparent 70%);
				animation: masterwork-rotate 6s linear infinite;
				@include blur-disables-animation;

				@keyframes masterwork-rotate {
					from {
						transform: rotate(0deg);
					}
					to {
						transform: rotate(360deg);
					}
				}
			}
		}

		@mixin disabled-spinny {
			--main-border-color-rgb: var(--bright-border-color-rgb);

			&-spinny {
				display: none;
			}
		}

		@include mobile {
			@include disabled-spinny;
		}

		.performance-mode & {
			@include disabled-spinny;
		}
	}
	
	&-artifact {
		--bright-border-color-rgb: #{color-rgb(artifact)};
		--dark-border-color-rgb: #{color-rgb(artifact-dark)};
	}

	@mixin item-icon($icon, $color: color(foreground-0), $to: before) {
		position: absolute;
		inset: 0;
		&::#{$to} {
			content: "";
			display: block;
			position: absolute;
			bottom: 6%;
			left: 6%;
			width: 20%;
			height: 20%;
			@include mask-icon($icon);
			background: $color;
			@content;
		}
	}

	&-not-acquired {
		.item-icon {
			filter: grayscale(0.6);
		}
		
		&::after {
			background: color(background-1, 0.4);
			box-shadow:
				inset 0 0 0 1px color(background-1, 0.4),
				inset 0 0 0 1px var(--border-color);
			filter: grayscale(0.6);
		}
	}

	&-wishlist {
		box-shadow:
			inset 0 0 0 2px color(wishlist-tooltip-border),
			inset 0 0 0 4px color(wishlist-tooltip-border, 0.5);

		&-icon {
			@include item-icon(url("./image/svg/wishlisted.svg"), color(foreground-0));

			.item-deepsight-has-pattern ~ * & {
				display: none;
			}
		}

		&::before {
			content: "";
			display: block;
			position: absolute;
			bottom: 0;
			left: 0;
			border-bottom: calc(var(--slot-size) * 0.45) solid color(wishlist-tooltip-border);
			border-right: calc(var(--slot-size) * 0.45) solid transparent;
		}

		&-no-match {
			box-shadow:
				inset 0 0 0 2px color(wishlist-tooltip-border-no-match),
				inset 0 0 0 4px color(wishlist-tooltip-border-no-match, 0.5);

			.item-masterwork ~ * & {
				box-shadow: inset 0 0 0 2px color(wishlist-tooltip-border-no-match);
			}

			&-icon {
				@include item-icon(url("./image/svg/delete.svg"), color(background-3));
			}

			&::before {
				content: "";
				display: block;
				position: absolute;
				bottom: 0;
				left: 0;
				border-bottom: calc(var(--slot-size) * 0.45) solid color(wishlist-tooltip-border-no-match);
				border-right: calc(var(--slot-size) * 0.45) solid transparent;
			}
		}

		&,
		&-no-match {
			z-index: $z-index-wishlist;
		}
	}
	
	&-fomo {
		box-shadow:
			inset 0 0 0 2px color(fomo-tooltip-border),
			inset 0 0 0 4px color(fomo-tooltip-border, 0.5);

		&-icon {
			@include item-icon(url("./image/png/notification/seasonal.png")) {
				bottom: 4%;
				left: 4%;
				width: 22%;
				height: 22%;
			}
			
			.item-deepsight-pattern ~ .item-fomo &,
			.item-can-enhance ~ .item-fomo & {
				display: none;
			}
		}

		&::before {
			content: "";
			display: block;
			position: absolute;
			bottom: 0;
			left: 0;
			border-bottom: calc(var(--slot-size) * 0.45) solid color(fomo-tooltip-border);
			border-right: calc(var(--slot-size) * 0.45) solid transparent;
		}
		
		z-index: $z-index-wishlist;
	}

	&-shaped {
		background-image: url("./image/shaped.png");
		z-index: $z-index-shaped;
		> * {
			@include item-icon(url("./image/svg/shaped.svg"), color(shaped));
		}
	}

	&-can-enhance {
		z-index: $z-index-shaped;
		> * {
			@include item-icon(url("./image/svg/enhanced.svg"), color(foreground)) {
				width: 22%;
				height: 22%;
			}
		}
	}
	
	&-shaped#{&}-can-enhance {
		> * {
			@include item-icon(url("./image/svg/enhanced.svg"), color(enhanced)) {
				width: 22%;
				height: 22%;
			}
		}
	}

	&-deepsight {
		$deepsight: color(deepsight);
		box-shadow: inset 0 0 0 2px $deepsight;
		z-index: $z-index-deepsight;

		// &-attuned {
		// 	&::before {
		// 		content: "";
		// 		display: block;
		// 		position: absolute;
		// 		bottom: 0;
		// 		right: 0;
		// 		border-bottom: calc(var(--slot-size) * .45) solid $deepsight;
		// 		border-left: calc(var(--slot-size) * .45) solid transparent;
		// 	}
		// 	&::after {
		// 		content: "!";
		// 		display: block;
		// 		position: absolute;
		// 		bottom: 3px;
		// 		right: 0;
		// 		font-size: 1.2em;
		// 		width: 33%;
		// 		height: 33%;
		// 		font-weight: 600;
		// 	}
		// }

		&-has-pattern {
			position: absolute;
			inset: 0;
			background-image: url("./image/deepsight.png");
		}

		&-pattern {
			&:not(&-unlocked) {
				@include item-icon(url("./image/svg/shaped.svg"), color(foreground));
			}

			z-index: $z-index-deepsight;
		}

		&-pattern-unlocked {
			@include item-icon(url("./image/svg/shaped.svg"), color(background-3));
		}
	}

	&-moment-watermark-custom {
		width: 0;
		height: 0;
		border-left: calc(var(--slot-size) * 0.49) solid #0000006a;
		border-bottom: calc(var(--slot-size) * 0.49) solid transparent;
		&::before {
			content: "";
			background: white;
			display: block;
			position: absolute;
			top: calc(var(--slot-size) * 0.04);
			left: calc(var(--slot-size) * -0.44);
			width: calc(var(--slot-size) * 0.2);
			height: calc(var(--slot-size) * 0.2);
			@include mask-icon;
		}
	}

	&-extra {
		:root.no-item-extra-info .item:not(:hover, :focus-visible) &--non-empty {
			&::before,
			.item-extra-info {
				display: none;
			}
		}

		display: grid;
		grid-template-rows: repeat(3, 1fr);
		justify-content: flex-end;
		align-items: center;
		padding: 2px;
		box-sizing: border-box;
		font-size: calc(var(--slot-size) * 0.2);
		font-weight: 500;
		text-align: right;
		z-index: $z-index-extra;

		&::before {
			content: "";
			display: block;
			position: absolute;
			background-image: url("./image/extra.png");
			background-size: cover;
			z-index: -1;
			inset: 1px;
			.item-masterwork ~ &, .item-deepsight ~ &, .item-wishlist ~ &, .item-wishlist-no-match ~ & {
				inset: 2px;
			}
		}

		&--empty {
			&::before {
				background: none;
				position: relative;
				grid-row: 1;
			}
			&::after {
				content: "";
				grid-row: 2;
			}
		}

		&-info {
			pointer-events: none;
			width: fit-content;
			justify-self: flex-end;
	
			.item--loadouted &:first-child {
				margin-right: 8px;
			}

			&:not(img) {
				background: #0007;
				padding: 0 3px;
			}

			@at-root img#{&} {
				min-height: 0;
				background-color: #0007;
				box-shadow: 0 0 0 3px #0007;
				margin-right: 3px;
				width: auto;
			}
		}
	}

	&-name {
		font-size: 0.5em;
		line-height: 1.3em;
		max-height: 100%;
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		overflow: hidden;
		background: none !important;

		&-text {
			background: #0007;
			box-shadow:
				3px 0 0 #0007,
				-3px 0 0 #0007;
		}
	}

	&-energy {
		display: flex;
		align-items: center;
		justify-content: flex-end;
		&-icon {
			&::before {
				content: "";
				display: block;
				width: 0.6em;
				height: 0.6em;
				position: relative;
				top: -0.06em;
				@include icon(masterwork);
			}
		}
	}

	&-power-level {
		display: flex;
		width: fit-content;
		justify-self: flex-end;
		align-items: center;
		&-icon {
			&::before {
				content: "";
				display: block;
				width: 0.6em;
				height: 0.6em;
				position: relative;
				top: -0.06em;
				background: currentColor;
				@include mask-icon(
					"https://raw.githubusercontent.com/justrealmilk/destiny-icons/master/general/power2.svg"
				);
			}
		}

		&-eighths {
			display: grid;
			grid-template-columns: 1em 1em;
			grid-template-rows: 1em 1em;
			font-size: 0.5em;
			height: 2em;
			margin-left: 0.5em;
			margin-right: -0.5em;
			top: -0.1em;
			position: relative;
			&::before {
				content: "";
				display: block;
				position: absolute;
				height: 100%;
				width: 1px;
				left: 35%;
				top: 10%;
				transform: rotate(25deg);
				background: currentColor;
			}
			&::after {
				content: "8";
				grid-column: 2;
				grid-row: 2;
			}
		}

		&-difference {
			font-size: 0.8em;
			margin-left: 6px;
			align-self: center;

			&-better {
				color: color(good);
			}
			&-worse {
				color: color(bad);
			}
		}
	}

	&-sort-stat-total {
		display: flex;
		align-items: center;
		position: relative;
		justify-self: flex-end;
		
		&-icon {
			position: relative;
			width: .8em;
			height: 1em;
			
			&::before,
			&::after {
				content: "";
				display: block;
				position: absolute;
				height: 0.2em;
				left: 1px;
				background: currentColor;
				box-shadow: 0 1px 1px #000a;
			}

			&::before {
				top: 0.25em;
				width: 0.6em;
			}
			&::after {
				bottom: 0.25em;
				width: 0.4em;
			}
		}
	}

	&-sort-harmonizable {
		display: flex;
		align-items: center;
		gap: .1em;
		box-shadow:
			inset 0 0 0 1px #0007,
			inset 0 0 0 2px #ff4e26;
		
		&-icon {
			display: inline-block;
			width: .8em;
			height: .8em;
			margin-right: .2em;
			@include mask-icon(url("./image/svg/shaped.svg"));
			color: #ff4e26;
		}
		
		&-numerator {
			font-weight: bold;
			color: #ff8f76;
		}
		
		&-separator, &-denominator {
			opacity: .7;
			color: #ff4e26;
		}
	}

	&-stat-distribution {
		&-value {
			color: gradient-mix(in lch, var(--value), #9e4949, #e04d4d 50%, #ff0 75%, #4eff13);
			text-shadow: none;
			font-weight: 600;
		}
	}
	
	&-extra-stat-wrapper {
		display: flex;
		align-items: center;
		color: gradient-mix(in lch, var(--value), #9e4949, #e04d4d 20%, #ff0 40%, #4eff13 60%, #13efff);
		
		&::before {
			content: "";
			width: 1.2em;
			height: 1.2em;
			@include mask-icon;
		}
	}

	&-loading {
		z-index: $z-index-loading;
		background: color(background-0, 0.8);
	}

	&-sort-ammo-type {
		height: 60%;
		min-height: 0;
		padding: 0 !important;
		background-color: #0007;
		box-shadow: 0 0 0 3px #0007;
		margin-right: 3px;
	}

	&-sort-damage-type {
		height: 60%;
		min-height: 0;
		padding: 0 !important;
		background-color: #0007;
		box-shadow: 0 0 0 3px #0007;
		margin-right: 3px;
	}

	&-moving {
		opacity: 0.5;
		transform: none;
		&::before {
			animation: item-moving-original-animation 1.5s linear infinite;
			@include blur-disables-animation;
			@keyframes item-moving-original-animation {
				0% {
					inset: -3px;
					opacity: 1;
				}
				30% {
					inset: -5px;
					opacity: 0.7;
				}
				50% {
					inset: -6px;
					opacity: 0;
				}
				70% {
					inset: 2px;
					opacity: 0;
				}
				100% {
					inset: -3px;
					opacity: 1;
				}
			}
		}

		&::after {
			background: none;
		}

		&-placeholder {
			&-wrapper {
				--wrapper-padding: 1000px;
				display: block;
				position: absolute;
				top: 0;
				left: 0;
				z-index: 999;
				width: calc(var(--slot-size) * 0.8 - var(--slot-padding) * 2 + var(--wrapper-padding) * 2);
				height: calc(var(--slot-size) * 0.8 - var(--slot-padding) * 2 + var(--wrapper-padding) * 2);
				padding: var(--wrapper-padding);
				box-sizing: border-box;
				transform: var(--transform) translate(-50%, -50%);
			}
			
			width: calc(var(--slot-size) * 0.8 - var(--slot-padding) * 2);
			height: calc(var(--slot-size) * 0.8 - var(--slot-padding) * 2);
			transition-property: background, border, color;
		}
	}

	&-weapon-type-icon {
		display: inline-block;
		position: relative;
		width: 2em;
		height: 1em;
		justify-self: flex-end;

		&::before {
			content: "";
			display: block;
			position: absolute;
			inset: 0;
			@include mask-icon;
		}

		padding: 0 !important;
		background-color: #0007;
		box-shadow: 0 0 0 3px #0007;
		margin-right: 3px;
	}

	&-extra-none-after-quantity-or-power &-quantity,
	&-extra-none-after-quantity-or-power &-power-level {
		grid-row: 3;
	}

	&-quantity {
		display: block !important;
		background: #0007;
		padding: 0 3px;
		
		:root:not(.show-extra-info, .show-item-extra-info) .item:not(:hover, :focus-visible) & {
			grid-row: 3;
		}

		&-max {
			box-shadow:
				inset 0 0 0 1px #0007,
				inset 0 0 0 2px color(warning);
			color: color(warning);
		}
	}

	@each $icon in lock, unlock {
		&-#{$icon}ed {
			z-index: 101;
			@include item-icon($icon, #000a) {
				bottom: calc(40% - 1px);
				left: calc(6% - 0.5px);
			}
			@include item-icon($icon, $to: after) {
				bottom: 40%;
			}
		}
	}
	
	&-exotic-armour-reward {
		.item-icon {
			opacity: 0.7;
			width: 80%;
			height: 80%;
			inset: 10%;
			position: absolute;
		}
	}
	
	&-artifice {
		background: url("./image/artifice.png");
		background-size: cover;
		@include item-icon(url("./image/svg/artifice.svg")) {
			bottom: 8%;
			left: 8%;
			width: 25%;
			height: 25%;
		}
	}
	
	&-loadouted-bookmark {
		display: block;
		position: absolute;
		inset: 0;
		z-index: 801;
		
		&, &1 {
			&::before, &::after {
				content: "";
				display: block;
				position: absolute;
			}
		}
		
		&1::after {
			top: -2px;
			right: 3px;
			width: 6px;
			height: calc(2px + 25%);
			background: #fff;
			clip-path: polygon(16.66% 100%, 16.66% 2px, 0% 0%, 83.33% 0%, 100% 2px, 100% 100%, 58.33% calc(95% - 2px));
		}
		
		&1::before {
			top: -2px;
			right: 4px;
			height: 2px;
			width: 6px;
			background: #aaa;
			clip-path: polygon(0% 100%, 1px 0%, 100% 0%, 100% 100%);
		}
		
		&::before {
			background: #0005;
			right: 2px;
			top: 0;
			height: calc(2px + 25%);
			width: 8px;
			clip-path: polygon(16.66% 100%, 16.66% 0%, 100% 0%, 100% 100%, 58.33% calc(95% - 2px));
		}
	}
	
	&-sort-breaker-type {
		margin: 0;
		
		&:not(:last-child) {
			margin-right: 0.15em;
		}
	}
	
	&--filtered-out:not(:focus-visible):not(:hover):not(:active) {
		filter: grayscale(0.5);
		&::after {
			content: "";
			display: block;
			position: absolute;
			inset: 0px;
			z-index: 1000;
			border: none;
			box-shadow: none;
			background: color(background-1, 0.8);
		}
	}
}
