.item-stat {
	&-wrapper {
		display: grid;
		grid-template-columns: auto auto 1fr repeat(3, auto);
		column-gap: 0.5em;
		row-gap: 2px;
		align-items: center;

		&-other-stats {
			display: contents;
		}
	}

	display: contents;
	font-weight: 500;
	text-shadow: .1em .1em 0 color(background-0, .3);

	&-label {
		text-align: right;
		color: color(foreground-2);
		grid-column: 2;
		&-masterwork {
			font-weight: 600;
			color: color(stat-masterwork);
		}
	}

	&-distribution &-label {
		grid-column: 1/3;
	}

	&-group-label {
		position: relative;
		margin-top: 10px;
		margin-bottom: -10px;
		grid-column: 1;
		font-size: 12px;
		--color: #{gradient-mix(in lch, var(--value), #9e4949, #e04d4d 50%, #ff0 75%, #4eff13)};
		color: var(--color);
		transition: 100ms color linear;

		&::before,
		&::after {
			content: "";
			display: block;
			position: absolute;
			transition:
				100ms height 50ms linear,
				100ms width 130ms linear,
				100ms border-color 100ms linear;
		}

		&::before {
			left: 50%;
			bottom: calc(100% + 2px);
			width: 8px;
			height: 3px;
			border-top: 1px solid var(--color);
			border-left: 1px solid var(--color);
		}

		&::after {
			left: 50%;
			top: calc(100% + 2px);
			width: 8px;
			height: 30px;
			border-bottom: 1px solid var(--color);
			border-left: 1px solid var(--color);
		}

		:root:not(.show-extra-info) & {
			color: transparent;
			transition: 100ms color 180ms linear;

			&::before,
			&::after {
				border-color: transparent;
				transition:
					100ms height 80ms linear,
					100ms width linear,
					100ms border-color 130ms linear;
				height: 0px;
				width: 0px;
			}
		}
	}

	&-bar {
		grid-column: 3;
		background: #fff1;
		height: 1.1em;
		position: relative;
		top: 1px;
		display: flex;
		overflow: hidden;
		
		&-block {
			height: 100%;
			width: calc(100% * var(--value));
			background: currentColor;
			flex-shrink: 0;
			&-negative {
				&.item-stat-mod {
					color: color(stat-negative);
				}
				
				display: contents;
				&::before,
				&::after {
					position: relative;
					content: "";
					height: 50%;
					top: 50%;
					width: calc(100% * var(--value) * -1);
					margin-left: calc(100% * var(--value));
					background: color-mix(in srgb, currentColor, #000 30%);
					flex-shrink: 0;
				}
				&::after {
					transform: translateX(calc(100% / (var(--value) * -1) + 1px));
				}
			}
		}

		&-recoildirection {
			background: none;
			circle {
				fill: #fff1;
			}

			path {
				fill: currentColor;
			}

			line {
				stroke: currentColor;
				stroke-width: 0.1;
			}
		}
		
		&-chunked {
			width: calc(20px * 10 + 2px * 10);
			height: 20px;
			margin: 4px 0;
			margin-left: -0.5px;
			@function box($i) {
				@return (
					calc(#{$i * 10%} + 1px) 0%,
					calc(#{$i * 10%} + 1px) 100%,
					calc(#{$i * 10% + 10%} - 1px) 100%,
					calc(#{$i * 10% + 10%} - 1px) 0%,
				);
			}
			$path: ();
			@for $i from 0 to 10 {
				$path: join($path, box($i));
			}
			clip-path: polygon($path);
		}
	}

	&-masterwork {
		grid-column: 5;
		color: color(stat-masterwork-bar);
	}

	&-mod {
		grid-column: 6;
		color: color(stat-mod);
	}

	&-subclass {
		color: var(--color-stat-subclass);
	}

	&-value {
		display: flex;
		gap: 0.5em;
		text-align: right;

		&-component {
			&:empty {
				display: none;
			}
		}

		:root:not(.show-extra-info) & {
			&-component {
				display: none;
			}
		}

		&-component-negative {
			color: color(stat-negative);
			font-weight: 600;
		}
	}

	&-bar ~ &-value {
		display: contents;
	}

	:root.show-extra-info &-combined {
		display: none;
	}

	&-formula {
		display: flex;
		gap: 0.5em;
	}

	&-distribution {
		&-component,
		& .item-stat-combined {
			color: gradient-mix(in lch, var(--value), #9e4949, #e04d4d 50%, #ff0 75%, #4eff13);
			text-shadow: none;
			font-weight: 600;
		}

		&-component {
			padding-right: 8px;
			position: relative;
			&-group-label {
				position: absolute;
				top: 0;
				right: 0;
				font-size: 12px;
			}
		}
	}
}
