.item-sort {
	&-button {
		position: relative;
		background: none;
		border: none;
		font: inherit;
		cursor: pointer;
		display: grid;
		grid-template-columns: auto 1fr;
		grid-template-rows: 1fr auto auto 1fr;
		align-items: center;
		z-index: 2;
		text-align: left;
		height: 100%;
		@include transition(out, transform, background);
				
		&:active {
			transform: translateY(2px);
			@include transition(in);
		}
		
		&:hover, &:focus-visible, &:active {
			background: color(background-0, .65);
		}
		
		&-icon {
			grid-row: 1/5;
			position: relative;
			color: color(foreground-2);
			width: 1.5em;
			height: 1.5em;
			border-radius: 1em;
			background: color(background-5);
			border: 2px solid currentColor;
			margin: 0 .8em 0 .5em;
			@include transition(out, background, color, transform);
			
			&::before {
				content: "";
				display: block;
				position: absolute;
				inset: .2em;
				background: currentColor;
				-webkit-mask-image: url("/image/svg/sort.svg");
				-webkit-mask-size: contain;
				-webkit-mask-repeat: no-repeat;
				-webkit-mask-position: center;
				mask-image: url("/image/svg/sort.svg");
				mask-size: contain;
				mask-repeat: no-repeat;
				mask-position: center;
			}
			
			> * {
				position: absolute;
				inset: 0;
				opacity: 0;
				transform: scale(0.5);
				@include transition(out, transform, opacity);
				
				&::before, &::after {
					content: "";
					display: block;
					position: absolute;
					width: .2em;
					height: .2em;
					border-radius: .2em;
					background: currentColor;
				}
				
				$position: -4px;
				$position-2: calc(100% + 2px);
				$duration: .2s;
				&:nth-child(1)::before {
					top: $position;
					left: $position;
					animation: top-left-to-bottom-right $duration linear;
					@keyframes top-left-to-bottom-right {
						to { top: $position-2; left: $position-2 }
					}
				}
				&:nth-child(1)::after {
					top: $position;
					right: $position;
					animation: top-right-to-bottom-left $duration linear;
					@keyframes top-right-to-bottom-left {
						50% { top: $position-2; right: $position }
						100% { top: $position-2; right: $position-2 }
					}
				}
				&:nth-child(2)::before {
					bottom: $position;
					right: $position;
					animation: bottom-right-to-top-left $duration linear;
					@keyframes bottom-right-to-top-left {
						to { bottom: $position-2; right: $position-2 }
					}
				}
				&:nth-child(2)::after {
					bottom: $position;
					left: $position;
					animation: bottom-left-to-top-right $duration linear;
					@keyframes bottom-left-to-top-right {
						50% { bottom: $position-2; left: $position }
						100% { bottom: $position-2; left: $position-2 }
					}
				}
			}
			
			.item-sort-button:where(:hover, :focus-visible, :active) & {
				color: color(foreground-0);
				background: color(background-6);
				transform: scale(1.25);
				@include transition(in);
				
				> * {
					transform: scale(1);
					opacity: 1;
					@include transition(in);
				}
			}
			
			.item-sort-button:active & {
				transform: scale(1.25);
				background: color(background-5);
				> * {
					&::before, &::after {
						animation: none;
					}
				}
			}
		}
		
		&-label {
			grid-row: 2;
			text-transform: uppercase;
			font-size: .7em;
			font-weight: 500;
			letter-spacing: .1em;
			line-height: 1em;
			margin-top: .1em;
			color: color(foreground-2);
			align-self: flex-end;
		}
		
		&-sort-text {
			grid-row: 3;
		}
	}
	
	&-drawer {
		position: absolute;
		background: color(background-1);
		@supports(backdrop-filter: blur(5px) brightness(1.5)) {
			&::before {
				content: "";
				display: block;
				position: absolute;
				inset: 0;
				backdrop-filter: blur(5px) brightness(1.5);
			}
			background: color(background-0, .9);
		}
	}
}
