.dropdown {
	border-radius: 0;
	position: relative;
	margin: 8px 0;
	padding: 6px calc(8px + var(--content-width, 0px)) 7px 8px;
	cursor: pointer;
	user-select: none;
	-webkit-user-select: none;
	background: color(button-background);
	border: 1px solid color(button-border);
	color: color(button-foreground);
	outline: none;
	transform: translateY(0);
	letter-spacing: 0.02em;
	font-weight: 300;
	@include grotesk(title) {
		padding: 7px calc(8px + var(--content-width, 0px)) 7px 8px;
		letter-spacing: 0.07em;
	}
	display: flex;
	align-items: center;
	z-index: 0;
	@include transition(out, max-height, background, border, color, transform, z-index);

	&::before {
		content: "";
		display: block;
		position: absolute;
		inset: -6px;
		box-shadow: 0 0 0 2px transparent;
		pointer-events: none;
		@include transition(out, inset, box-shadow);
	}

	&:where(:hover, :active, :focus-visible, :has(:focus-visible)) {
		background: color(button-background-hover);
		border-color: color(button-border-hover);
		color: color(button-foreground-hover);
		@include transition(in);
		z-index: 1000;

		&::before {
			inset: -3px;
			box-shadow: 0 0 0 2px color(button-border-hover);
			@include transition(in);
		}

		&::after {
			animation-iteration-count: 1;
		}
	}

	// &::before {
	// 	content: "";
	// 	display: block;
	// 	position: absolute;
	// 	inset: 0;
	// 	backdrop-filter: blur(10px);
	// }

	&-option {
		@include transition(out, max-height, margin, opacity, padding, color);
		align-self: center;
		max-height: 50px;
		cursor: pointer;
		margin: 4px 8px 6px;
		background: none;
		border: none;
		grid-column: 2;
		color: color(foreground-3);
		font-size: inherit;
		letter-spacing: 0.04em;
		font-weight: 600;
		text-transform: uppercase;
		position: relative;
		
		@include grotesk {
			margin: 6px 8px;
			letter-spacing: 0.07em;
		}

		&::after {
			content: "";
			display: block;
			position: absolute;
			left: 50%;
			transform: translateX(-50%);
			top: 100%;
			height: 2px;
			width: 0%;
			background: currentColor;
			@include transition(out, width);
		}

		&-active {
			&::after {
				width: 100%;
			}
		}

		&:where(:hover, :active, :focus-visible) {
			color: color(foreground-0);
			transition-duration: 0s;
		}

		&:where(:active) {
			transform: translateY(2px);
			@include transition(0s);
		}
	}

	&-container {
		border-radius: 0;
		position: absolute;
		right: -1px;
		top: -1px;
		cursor: pointer;
		user-select: none;
		-webkit-user-select: none;
		background: color(background-2);
		border: 1px solid color(button-border);
		outline: none;
		transform: translateY(0);
		display: flex;
		flex-direction: column;
		align-items: center;
		@include transition(out, max-height, background, border, color, transform);
		height: fit-content;
		overflow: hidden;

		@mixin hidden($selector) {
			&:not(:hover, #{unquote($selector)}) .dropdown-option:not(.dropdown-option-active, :first-child),
			&:not(:hover, #{unquote($selector)}).dropdown-option-active
				.dropdown-option:first-child:not(.dropdown-option-active) {
				max-height: 0px;
				margin-top: 0px;
				margin-bottom: 0px;
				padding-top: 0px;
				padding-bottom: 0px;
				opacity: 0;
			}
		}

		@include hidden(":focus-within");
		@supports selector(:has(:focus-visible)) {
			@include hidden(":has(:focus-visible)");
		}
	}

	&:hover &-container,
	&:focus-within &-container {
		@include transition(in);
		transition-delay: 0s;
		background: color(background-1);
	}
}
