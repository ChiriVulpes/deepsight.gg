@use "sass:math";

.class-picker {
	margin: 30px;
	position: relative;
	// this is some kind of circle thing that i think i can do with css math nowadays given i have the angle
	// but you see, in addition to that, also i'm dumb. so instead here have a multiplier
	--wipe-animation-size-multiplier: 1.4285714285714286;
	&-button {
		transform: rotate(45deg);
		padding: 0;
		aspect-ratio: 1/1;
		--wipe-animation-angle: -45deg;
		background: var(--background) !important;
		border: none;
		justify-content: center;
		margin: 0;
		z-index: 1;
		@include transition(in, margin, opacity);
		&::after {
			content: "";
			position: absolute;
			inset: 0;
			border: 2px solid #888;
			mix-blend-mode: color-dodge;
		}

		&-preview {
			position: absolute;
			inset: 0;

			&::after {
				content: "";
				position: absolute;
				inset: -1px;
				background: #444;
				z-index: 1;
				opacity: 0;
				@include transition(in, opacity);

				.class-picker:not(:hover, :focus-within) .class-picker-button-wrapper & {
					opacity: 1;
				}
			}
		}

		&-current {
			grid-column: 2;
			grid-row: 2;
			width: 70px;
		}

		.button-icon-inner {
			margin: 0;
			width: 80%;
			height: 60%;
			transform: rotate(-45deg);
			&::before {
				inset: 0;
			}
		}

		&-wrapper {
			--size: 100%;
			position: absolute;
			top: calc(0% - (var(--size) - 100%) / 2);
			right: 100%;
			display: grid;
			grid-template-columns: repeat(3, 1fr);
			grid-template-rows: repeat(3, 1fr);
			aspect-ratio: 1/1;
			height: var(--size);
			@include transition(in, height, top, right);

			.class-picker:not(:hover, :focus-within) & {
				--size: 50%;
			}

			&::after {
				content: "";
				position: absolute;
				left: 100%;
				top: 0;
				bottom: 0;
				width: 100%;
			}

			&-2 {
				--size: 150%;
				right: 103%;

				.class-picker-button {
					margin: -3px;

					&:nth-child(1) {
						grid-column: 3;
						grid-row: 1;
					}
					&:nth-child(2) {
						grid-column: 3;
						grid-row: 3;
					}
				}

				.class-picker:not(:hover, :focus-within) & {
					--size: 50%;
					right: 115%;

					.class-picker-button {
						margin: 0;
					}
				}
			}

			&-4,
			&-3 {
				--size: 150%;
				right: 150%;

				.class-picker-button {
					margin: -3px;

					&:nth-child(1) {
						grid-column: 2;
						grid-row: 1;
					}
					&:nth-child(2) {
						grid-column: 3;
						grid-row: 2;
					}
					&:nth-child(3) {
						grid-column: 2;
						grid-row: 3;
					}
					&:nth-child(4) {
						grid-column: 1;
						grid-row: 2;
					}
				}

				.class-picker:not(:hover, :focus-within) & {
					--size: 50%;
					right: 130%;

					.class-picker-button {
						margin: 0;
						&:not(:nth-child(2)) {
							opacity: 0;
						}
					}
				}

				.class-picker-button-wrapper-borders {
					&1,
					&2 {
						display: contents;
					}
					&1,
					&2 {
						&::before,
						&::after {
							content: "";
							display: block;
							position: absolute;
							inset: calc((-100% * var(--wipe-animation-size-multiplier) + 100%) / 2 * 1.2);
							border: 1px solid white;
							pointer-events: none;
							transform: rotate(45deg);
							border-image-source: linear-gradient(var(--angle), transparent 70%, #fff8);
							border-image-slice: 1;
							@include transition(in, opacity);

							.class-picker:not(:hover, :focus-within) & {
								opacity: 0;
							}
						}
					}

					&1 {
						&::before {
							grid-column: 2/3;
							grid-row: 1/2;
							border-bottom: none;
							border-right: none;
							--angle: -45deg;
						}
						&::after {
							grid-column: 3/4;
							grid-row: 2/3;
							border-bottom: none;
							border-left: none;
							--angle: 45deg;
						}
					}
					&2 {
						&::before {
							grid-column: 2/3;
							grid-row: 3/4;
							border-top: none;
							border-left: none;
							--angle: 135deg;
						}
						&::after {
							grid-column: 1/2;
							grid-row: 2/3;
							border-top: none;
							border-right: none;
							--angle: 225deg;
						}
					}
				}
			}
		}
	}
}
